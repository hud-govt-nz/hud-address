% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_base.R
\name{match_address_pile}
\alias{match_address_pile}
\alias{match_address_piles}
\title{Match address piles}
\usage{
match_address_piles(
  targ_df,
  candidates_df,
  structured_cols,
  unstructured_cols,
  guess_cols,
  col_weights,
  min_raw_score,
  max_dist = 1,
  edit_weights = c(1, 1, 1, 1),
  consensus_threshold = 0.95,
  nthread = 10,
  dump_path = NULL
)
}
\arguments{
\item{targ_df}{Records we're trying to match.}

\item{candidates_df}{Definitive records.}

\item{structured_cols}{List of structured data (e.g. Street number/street name)
columns which exist in both frames.}

\item{unstructured_cols}{List of comma-separated unstructured data (e.g. Address
blocks in the form of "Willis Street, Wellington Central, Wellington") in
targ_df.}

\item{guess_cols}{List of structured data in candidates_df which we're trying to
match the unstructured_cols to.}

\item{col_weights}{Weight to apply to each structured/guess column. This is
mostly helpful in the event of tiebreakers.}

\item{min_raw_score}{Minimum threshold before adjustments; raw_scores are
determined by col_weights. So you can either use this to require a minimum
number of matches to consider a row a real match, or you can make one
col_weight bigger than the rest combined to it becomes mandatory for getting
over the threshold.}

\item{max_dist}{Matches are slightly fuzzy, using a string distance algorithm,
and discounted on a 1/n basis (i.e. the first error is free, the second will
discount the match score by 50\%, etc.). Matches with a string distance above
\code{max_dist} will be dropped completely, so that vaguely similar names do not
get a residual score.}

\item{edit_weights}{Used by stringdistmatrix for tweaking edit/deletion/insertion
weights.}

\item{consensus_threshold}{Consensus values have to reach this threshold to be
accepted.}

\item{nthread}{Number of threads stringdistmatrix should use.}

\item{dump_path}{Path for validation output.}
}
\description{
Takes a frame of street/area names with structured and unstructured data and
returns matching row from candidates table.
}
\details{
Designed to be used for street or suburb matching, which can be used to
generate a shortlist (i.e. A list of all the addresses on a street) which
you can then do rule-based matching on.

In theory you can use this for complete addresses, but the stringdistmatrix
will be very big.
}
\examples{
match_address_pile(
  targ_df = sites_df,
  candidates_df = streets_df,
  structured_cols = c("street_name", "street_type", "street_direction"), # Exists in both
  unstructured_cols = c("prj_raw_area"), # Unstructured area string (e.g. "Island Bay, Wellington")
  guess_cols = c("suburb_name", "town_city_name", "ta_name", "regc_name"),
  col_weights = c(
    street_name = 1.0,
    street_type = 0.2,
    street_direction = 0.5,
    suburb_name = 1.0,
    town_city_name = 0.8,
    ta_name = 0.6,
    regc_name = 0.5))

}
