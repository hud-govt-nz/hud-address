% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_nzad.R
\name{match_nzad_addresses}
\alias{match_nzad_addresses}
\title{Match NZAD addresses}
\usage{
match_nzad_addresses(
  targ_df,
  structured_cols,
  unstructured_cols,
  guess_cols,
  nzad_df,
  dump_path = NULL,
  drop_multi_results = TRUE
)
}
\arguments{
\item{targ_df}{Records we're trying to match.}

\item{structured_cols}{List of structured data (e.g. Street number/street
name) columns which exist in both frames.}

\item{unstructured_cols}{List of comma-separated unstructured data (e.g.
Address blocks in the form of "Willis Street, Wellington Central,
Wellington") in targ_df.}

\item{guess_cols}{List of structured data in candidates_df which we're
trying to match the unstructured_cols to.}

\item{nzad_df}{NZAD data from \link{Source}.\link{NZPost_NZAD_Address} (you can
preprocess this, e.g. Only subset a TA).}

\item{dump_path}{Path for validation output.}

\item{drop_multi_results}{If more than one result is returned for a given
address, return a single blank placeholder instead. This is useful if you
expected a one- to-one join.}
}
\description{
Takes a list of partially/fully structured addresses and return matching row
from NZAD (or something that looks like the NZAD) dataset.
}
\details{
Unstructured columns can also be used to add messy suburb/town_city/ta/regc
data.
}
\examples{
match_nzad_addresses(
  targ_df = sites_df,
  nzad_df = nzad_df,
  structured_cols = c("street_name", "street_type", "street_direction"), # Exists in both
  unstructured_cols = c("prj_raw_area"), # Unstructured area string (e.g. "Island Bay, Wellington")
  guess_cols = c("suburb_name", "town_city_name", "ta_name", "regc_name"))

}
